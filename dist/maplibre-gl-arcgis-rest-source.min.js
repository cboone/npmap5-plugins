!function(g,I){"object"==typeof exports&&"undefined"!=typeof module?module.exports=I():"function"==typeof define&&define.amd?define(I):(g="undefined"!=typeof globalThis?globalThis:g||self).ArcGisRestSource=I()}(this,(function(){"use strict";
/* @preserve
  * @terraformer/arcgis - v2.1.1 - MIT
  * Copyright (c) 2012-2022 Environmental Systems Research Institute, Inc.
  * Tue Aug 02 2022 14:23:48 GMT-0700 (Pacific Daylight Time)
  */var g=function(g,I,C,A){var i=(A[0]-C[0])*(g[1]-C[1])-(A[1]-C[1])*(g[0]-C[0]),e=(I[0]-g[0])*(g[1]-C[1])-(I[1]-g[1])*(g[0]-C[0]),l=(A[1]-C[1])*(I[0]-g[0])-(A[0]-C[0])*(I[1]-g[1]);if(0!==l){var Z=i/l,d=e/l;if(Z>=0&&Z<=1&&d>=0&&d<=1)return!0}return!1},I=function(I,C){for(var A=0;A<I.length-1;A++)for(var i=0;i<C.length-1;i++)if(g(I[A],I[A+1],C[i],C[i+1]))return!0;return!1},C=function(g){for(var I,C=0,A=0,i=g.length,e=g[A];A<i-1;A++)C+=((I=g[A+1])[0]-e[0])*(I[1]+e[1]),e=I;return C>=0},A=function(g,C){var A=I(g,C),i=function(g,I){for(var C=!1,A=-1,i=g.length,e=i-1;++A<i;e=A)(g[A][1]<=I[1]&&I[1]<g[e][1]||g[e][1]<=I[1]&&I[1]<g[A][1])&&I[0]<(g[e][0]-g[A][0])*(I[1]-g[A][1])/(g[e][1]-g[A][1])+g[A][0]&&(C=!C);return C}(g,C[0]);return!(A||!i)},i=function g(i,e){var l={};if(i.features){l.type="FeatureCollection",l.features=[];for(var Z=0;Z<i.features.length;Z++)l.features.push(g(i.features[Z],e))}if("number"==typeof i.x&&"number"==typeof i.y&&(l.type="Point",l.coordinates=[i.x,i.y],"number"==typeof i.z&&l.coordinates.push(i.z)),i.points&&(l.type="MultiPoint",l.coordinates=i.points.slice(0)),i.paths&&(1===i.paths.length?(l.type="LineString",l.coordinates=i.paths[0].slice(0)):(l.type="MultiLineString",l.coordinates=i.paths.slice(0))),i.rings&&(l=function(g){for(var i,e,l,Z,d=[],o=[],s=0;s<g.length;s++){var m=(function(g,I){for(var C=0;C<g.length;C++)if(g[C]!==I[C])return!1;return!0}((Z=g[s].slice(0))[0],Z[Z.length-1])||Z.push(Z[0]),Z);if(!(m.length<4))if(C(m)){var t=[m.slice().reverse()];d.push(t)}else o.push(m.slice().reverse())}for(var a=[];o.length;){l=o.pop();var c=!1;for(i=d.length-1;i>=0;i--)if(e=d[i][0],A(e,l)){d[i].push(l),c=!0;break}c||a.push(l)}for(;a.length;){l=a.pop();var n=!1;for(i=d.length-1;i>=0;i--)if(e=d[i][0],I(e,l)){d[i].push(l),n=!0;break}n||d.push([l.reverse()])}return 1===d.length?{type:"Polygon",coordinates:d[0]}:{type:"MultiPolygon",coordinates:d}}(i.rings.slice(0))),"number"==typeof i.xmin&&"number"==typeof i.ymin&&"number"==typeof i.xmax&&"number"==typeof i.ymax&&(l.type="Polygon",l.coordinates=[[[i.xmax,i.ymax],[i.xmin,i.ymax],[i.xmin,i.ymin],[i.xmax,i.ymin],[i.xmax,i.ymax]]]),(i.geometry||i.attributes)&&(l.type="Feature",l.geometry=i.geometry?g(i.geometry):null,l.properties=i.attributes?function(g){var I={};for(var C in g)g.hasOwnProperty(C)&&(I[C]=g[C]);return I}(i.attributes):null,i.attributes))try{l.id=function(g,I){for(var C=I?[I,"OBJECTID","FID"]:["OBJECTID","FID"],A=0;A<C.length;A++){var i=C[A];if(i in g&&("string"==typeof g[i]||"number"==typeof g[i]))return g[i]}throw Error("No valid id attribute found")}(i.attributes,e)}catch(g){}return JSON.stringify(l.geometry)===JSON.stringify({})&&(l.geometry=null),i.spatialReference&&i.spatialReference.wkid&&4326!==i.spatialReference.wkid&&console.warn("Object converted in non-standard crs - "+JSON.stringify(i.spatialReference)),l},e=null;try{var l="undefined"!=typeof module&&"function"==typeof module.require&&module.require("worker_threads")||"function"==typeof __non_webpack_require__&&__non_webpack_require__("worker_threads")||"function"==typeof require&&require("worker_threads");e=l.Worker}catch(g){}function Z(g,I,C){var A=void 0===I?null:I,i=function(g,I){return Buffer.from(g,"base64").toString(I?"utf16":"utf8")}(g,void 0!==C&&C),l=i.indexOf("\n",10)+1,Z=i.substring(l)+(A?"//# sourceMappingURL="+A:"");return function(g){return new e(Z,Object.assign({},g,{eval:!0}))}}function d(g,I,C){var A=void 0===I?null:I,i=function(g,I){var C=atob(g);if(I){for(var A=new Uint8Array(C.length),i=0,e=C.length;i<e;++i)A[i]=C.charCodeAt(i);return String.fromCharCode.apply(null,new Uint16Array(A.buffer))}return C}(g,void 0!==C&&C),e=i.indexOf("\n",10)+1,l=i.substring(e)+(A?"//# sourceMappingURL="+A:""),Z=new Blob([l],{type:"application/javascript"});return URL.createObjectURL(Z)}var o="[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0);var s,m,t,a=(s="",m=null,t=!1,o?Z(s,m,t):function(g,I,C){var A;return function(i){return A=A||d(g,I,C),new Worker(A,i)}}(s,m,t));const c=40075016.68557849;function n(g,I){const C=20037508.342789244*g/180;let A=Math.log(Math.tan((90+I)*Math.PI/360))/(Math.PI/180);return A=20037508.342789244*A/180,{x:C,y:A}}function G(g,I=256){return c/(I*(1<<g))}const b=["102100","900913","3857","3587","54004","41001","102113","3785"];function r(g){const I=[Math.min(g[0],g[2]),Math.min(g[1],g[3])],C=[Math.max(g[0],g[2]),Math.max(g[1],g[3])];let A=n(I[0],I[1]),i=n(C[0],C[1]);return{type:"extent",xmin:A.x,ymin:A.y,xmax:i.x,ymax:i.y,spatialReferece:{latestWkid:102100,wkid:3857}}}function V(g,I,C){const A=(g,I)=>{const C=function(g,I){return{lng:180*g/20037508.342789244,lat:360*Math.atan(Math.exp(I*Math.PI/20037508.342789244))/Math.PI-90}}(g,I);return[C.lng,C.lat]};return b.indexOf(C)>-1?g.map(((g,C)=>g.map(((g,i)=>A(g,I[C][i]))))):g.map(((g,C)=>g.map(((g,A)=>[g,I[C][A]]))))}function W(g,I,C,A,i){return I.map(((e,l)=>{let Z=0;return Array(e).fill(void 0).map(((e,d)=>{const o=I.reduce(((g,I,C)=>g+(C<l?I:0)),0),s=g[o+d],m=i?-1:1;let t;return t=0===d?s*m+A/C:s*m+Z,Z=t,t})).map((g=>g*C))}))}var u={
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
read:function(g,I,C,A,i){var e,l,Z=8*i-A-1,d=(1<<Z)-1,o=d>>1,s=-7,m=C?i-1:0,t=C?-1:1,a=g[I+m];for(m+=t,e=a&(1<<-s)-1,a>>=-s,s+=Z;s>0;e=256*e+g[I+m],m+=t,s-=8);for(l=e&(1<<-s)-1,e>>=-s,s+=A;s>0;l=256*l+g[I+m],m+=t,s-=8);if(0===e)e=1-o;else{if(e===d)return l?NaN:1/0*(a?-1:1);l+=Math.pow(2,A),e-=o}return(a?-1:1)*l*Math.pow(2,e-A)},write:function(g,I,C,A,i,e){var l,Z,d,o=8*e-i-1,s=(1<<o)-1,m=s>>1,t=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,a=A?0:e-1,c=A?1:-1,n=I<0||0===I&&1/I<0?1:0;for(I=Math.abs(I),isNaN(I)||I===1/0?(Z=isNaN(I)?1:0,l=s):(l=Math.floor(Math.log(I)/Math.LN2),I*(d=Math.pow(2,-l))<1&&(l--,d*=2),(I+=l+m>=1?t/d:t*Math.pow(2,1-m))*d>=2&&(l++,d/=2),l+m>=s?(Z=0,l=s):l+m>=1?(Z=(I*d-1)*Math.pow(2,i),l+=m):(Z=I*Math.pow(2,m-1)*Math.pow(2,i),l=0));i>=8;g[C+a]=255&Z,a+=c,Z/=256,i-=8);for(l=l<<i|Z,o+=i;o>0;g[C+a]=255&l,a+=c,l/=256,o-=8);g[C+a-c]|=128*n}},y=h,B=u;function h(g){this.buf=ArrayBuffer.isView&&ArrayBuffer.isView(g)?g:new Uint8Array(g||0),this.pos=0,this.type=0,this.length=this.buf.length}h.Varint=0,h.Fixed64=1,h.Bytes=2,h.Fixed32=5;var p,Y=4294967296,w=1/Y,H="undefined"==typeof TextDecoder?null:new TextDecoder("utf8");function K(g){return g.type===h.Bytes?g.readVarint()+g.pos:g.pos+1}function R(g,I,C){return C?4294967296*I+(g>>>0):4294967296*(I>>>0)+(g>>>0)}function J(g,I,C){var A=I<=16383?1:I<=2097151?2:I<=268435455?3:Math.floor(Math.log(I)/(7*Math.LN2));C.realloc(A);for(var i=C.pos-1;i>=g;i--)C.buf[i+A]=C.buf[i]}function X(g,I){for(var C=0;C<g.length;C++)I.writeVarint(g[C])}function D(g,I){for(var C=0;C<g.length;C++)I.writeSVarint(g[C])}function N(g,I){for(var C=0;C<g.length;C++)I.writeFloat(g[C])}function F(g,I){for(var C=0;C<g.length;C++)I.writeDouble(g[C])}function S(g,I){for(var C=0;C<g.length;C++)I.writeBoolean(g[C])}function Q(g,I){for(var C=0;C<g.length;C++)I.writeFixed32(g[C])}function v(g,I){for(var C=0;C<g.length;C++)I.writeSFixed32(g[C])}function T(g,I){for(var C=0;C<g.length;C++)I.writeFixed64(g[C])}function k(g,I){for(var C=0;C<g.length;C++)I.writeSFixed64(g[C])}function L(g,I){return(g[I]|g[I+1]<<8|g[I+2]<<16)+16777216*g[I+3]}function f(g,I,C){g[C]=I,g[C+1]=I>>>8,g[C+2]=I>>>16,g[C+3]=I>>>24}function P(g,I){return(g[I]|g[I+1]<<8|g[I+2]<<16)+(g[I+3]<<24)}h.prototype={destroy:function(){this.buf=null},readFields:function(g,I,C){for(C=C||this.length;this.pos<C;){var A=this.readVarint(),i=A>>3,e=this.pos;this.type=7&A,g(i,I,this),this.pos===e&&this.skip(A)}return I},readMessage:function(g,I){return this.readFields(g,I,this.readVarint()+this.pos)},readFixed32:function(){var g=L(this.buf,this.pos);return this.pos+=4,g},readSFixed32:function(){var g=P(this.buf,this.pos);return this.pos+=4,g},readFixed64:function(){var g=L(this.buf,this.pos)+L(this.buf,this.pos+4)*Y;return this.pos+=8,g},readSFixed64:function(){var g=L(this.buf,this.pos)+P(this.buf,this.pos+4)*Y;return this.pos+=8,g},readFloat:function(){var g=B.read(this.buf,this.pos,!0,23,4);return this.pos+=4,g},readDouble:function(){var g=B.read(this.buf,this.pos,!0,52,8);return this.pos+=8,g},readVarint:function(g){var I,C,A=this.buf;return I=127&(C=A[this.pos++]),C<128?I:(I|=(127&(C=A[this.pos++]))<<7,C<128?I:(I|=(127&(C=A[this.pos++]))<<14,C<128?I:(I|=(127&(C=A[this.pos++]))<<21,C<128?I:function(g,I,C){var A,i,e=C.buf;if(i=e[C.pos++],A=(112&i)>>4,i<128)return R(g,A,I);if(i=e[C.pos++],A|=(127&i)<<3,i<128)return R(g,A,I);if(i=e[C.pos++],A|=(127&i)<<10,i<128)return R(g,A,I);if(i=e[C.pos++],A|=(127&i)<<17,i<128)return R(g,A,I);if(i=e[C.pos++],A|=(127&i)<<24,i<128)return R(g,A,I);if(i=e[C.pos++],A|=(1&i)<<31,i<128)return R(g,A,I);throw new Error("Expected varint not more than 10 bytes")}(I|=(15&(C=A[this.pos]))<<28,g,this))))},readVarint64:function(){return this.readVarint(!0)},readSVarint:function(){var g=this.readVarint();return g%2==1?(g+1)/-2:g/2},readBoolean:function(){return Boolean(this.readVarint())},readString:function(){var g=this.readVarint()+this.pos,I=this.pos;return this.pos=g,g-I>=12&&H?function(g,I,C){return H.decode(g.subarray(I,C))}(this.buf,I,g):function(g,I,C){var A="",i=I;for(;i<C;){var e,l,Z,d=g[i],o=null,s=d>239?4:d>223?3:d>191?2:1;if(i+s>C)break;1===s?d<128&&(o=d):2===s?128==(192&(e=g[i+1]))&&(o=(31&d)<<6|63&e)<=127&&(o=null):3===s?(e=g[i+1],l=g[i+2],128==(192&e)&&128==(192&l)&&((o=(15&d)<<12|(63&e)<<6|63&l)<=2047||o>=55296&&o<=57343)&&(o=null)):4===s&&(e=g[i+1],l=g[i+2],Z=g[i+3],128==(192&e)&&128==(192&l)&&128==(192&Z)&&((o=(15&d)<<18|(63&e)<<12|(63&l)<<6|63&Z)<=65535||o>=1114112)&&(o=null)),null===o?(o=65533,s=1):o>65535&&(o-=65536,A+=String.fromCharCode(o>>>10&1023|55296),o=56320|1023&o),A+=String.fromCharCode(o),i+=s}return A}(this.buf,I,g)},readBytes:function(){var g=this.readVarint()+this.pos,I=this.buf.subarray(this.pos,g);return this.pos=g,I},readPackedVarint:function(g,I){if(this.type!==h.Bytes)return g.push(this.readVarint(I));var C=K(this);for(g=g||[];this.pos<C;)g.push(this.readVarint(I));return g},readPackedSVarint:function(g){if(this.type!==h.Bytes)return g.push(this.readSVarint());var I=K(this);for(g=g||[];this.pos<I;)g.push(this.readSVarint());return g},readPackedBoolean:function(g){if(this.type!==h.Bytes)return g.push(this.readBoolean());var I=K(this);for(g=g||[];this.pos<I;)g.push(this.readBoolean());return g},readPackedFloat:function(g){if(this.type!==h.Bytes)return g.push(this.readFloat());var I=K(this);for(g=g||[];this.pos<I;)g.push(this.readFloat());return g},readPackedDouble:function(g){if(this.type!==h.Bytes)return g.push(this.readDouble());var I=K(this);for(g=g||[];this.pos<I;)g.push(this.readDouble());return g},readPackedFixed32:function(g){if(this.type!==h.Bytes)return g.push(this.readFixed32());var I=K(this);for(g=g||[];this.pos<I;)g.push(this.readFixed32());return g},readPackedSFixed32:function(g){if(this.type!==h.Bytes)return g.push(this.readSFixed32());var I=K(this);for(g=g||[];this.pos<I;)g.push(this.readSFixed32());return g},readPackedFixed64:function(g){if(this.type!==h.Bytes)return g.push(this.readFixed64());var I=K(this);for(g=g||[];this.pos<I;)g.push(this.readFixed64());return g},readPackedSFixed64:function(g){if(this.type!==h.Bytes)return g.push(this.readSFixed64());var I=K(this);for(g=g||[];this.pos<I;)g.push(this.readSFixed64());return g},skip:function(g){var I=7&g;if(I===h.Varint)for(;this.buf[this.pos++]>127;);else if(I===h.Bytes)this.pos=this.readVarint()+this.pos;else if(I===h.Fixed32)this.pos+=4;else{if(I!==h.Fixed64)throw new Error("Unimplemented type: "+I);this.pos+=8}},writeTag:function(g,I){this.writeVarint(g<<3|I)},realloc:function(g){for(var I=this.length||16;I<this.pos+g;)I*=2;if(I!==this.length){var C=new Uint8Array(I);C.set(this.buf),this.buf=C,this.length=I}},finish:function(){return this.length=this.pos,this.pos=0,this.buf.subarray(0,this.length)},writeFixed32:function(g){this.realloc(4),f(this.buf,g,this.pos),this.pos+=4},writeSFixed32:function(g){this.realloc(4),f(this.buf,g,this.pos),this.pos+=4},writeFixed64:function(g){this.realloc(8),f(this.buf,-1&g,this.pos),f(this.buf,Math.floor(g*w),this.pos+4),this.pos+=8},writeSFixed64:function(g){this.realloc(8),f(this.buf,-1&g,this.pos),f(this.buf,Math.floor(g*w),this.pos+4),this.pos+=8},writeVarint:function(g){(g=+g||0)>268435455||g<0?function(g,I){var C,A;g>=0?(C=g%4294967296|0,A=g/4294967296|0):(A=~(-g/4294967296),4294967295^(C=~(-g%4294967296))?C=C+1|0:(C=0,A=A+1|0));if(g>=0x10000000000000000||g<-0x10000000000000000)throw new Error("Given varint doesn't fit into 10 bytes");I.realloc(10),function(g,I,C){C.buf[C.pos++]=127&g|128,g>>>=7,C.buf[C.pos++]=127&g|128,g>>>=7,C.buf[C.pos++]=127&g|128,g>>>=7,C.buf[C.pos++]=127&g|128,g>>>=7,C.buf[C.pos]=127&g}(C,0,I),function(g,I){var C=(7&g)<<4;if(I.buf[I.pos++]|=C|((g>>>=3)?128:0),!g)return;if(I.buf[I.pos++]=127&g|((g>>>=7)?128:0),!g)return;if(I.buf[I.pos++]=127&g|((g>>>=7)?128:0),!g)return;if(I.buf[I.pos++]=127&g|((g>>>=7)?128:0),!g)return;if(I.buf[I.pos++]=127&g|((g>>>=7)?128:0),!g)return;I.buf[I.pos++]=127&g}(A,I)}(g,this):(this.realloc(4),this.buf[this.pos++]=127&g|(g>127?128:0),g<=127||(this.buf[this.pos++]=127&(g>>>=7)|(g>127?128:0),g<=127||(this.buf[this.pos++]=127&(g>>>=7)|(g>127?128:0),g<=127||(this.buf[this.pos++]=g>>>7&127))))},writeSVarint:function(g){this.writeVarint(g<0?2*-g-1:2*g)},writeBoolean:function(g){this.writeVarint(Boolean(g))},writeString:function(g){g=String(g),this.realloc(4*g.length),this.pos++;var I=this.pos;this.pos=function(g,I,C){for(var A,i,e=0;e<I.length;e++){if((A=I.charCodeAt(e))>55295&&A<57344){if(!i){A>56319||e+1===I.length?(g[C++]=239,g[C++]=191,g[C++]=189):i=A;continue}if(A<56320){g[C++]=239,g[C++]=191,g[C++]=189,i=A;continue}A=i-55296<<10|A-56320|65536,i=null}else i&&(g[C++]=239,g[C++]=191,g[C++]=189,i=null);A<128?g[C++]=A:(A<2048?g[C++]=A>>6|192:(A<65536?g[C++]=A>>12|224:(g[C++]=A>>18|240,g[C++]=A>>12&63|128),g[C++]=A>>6&63|128),g[C++]=63&A|128)}return C}(this.buf,g,this.pos);var C=this.pos-I;C>=128&&J(I,C,this),this.pos=I-1,this.writeVarint(C),this.pos+=C},writeFloat:function(g){this.realloc(4),B.write(this.buf,g,this.pos,!0,23,4),this.pos+=4},writeDouble:function(g){this.realloc(8),B.write(this.buf,g,this.pos,!0,52,8),this.pos+=8},writeBytes:function(g){var I=g.length;this.writeVarint(I),this.realloc(I);for(var C=0;C<I;C++)this.buf[this.pos++]=g[C]},writeRawMessage:function(g,I){this.pos++;var C=this.pos;g(I,this);var A=this.pos-C;A>=128&&J(C,A,this),this.pos=C-1,this.writeVarint(A),this.pos+=A},writeMessage:function(g,I,C){this.writeTag(g,h.Bytes),this.writeRawMessage(I,C)},writePackedVarint:function(g,I){I.length&&this.writeMessage(g,X,I)},writePackedSVarint:function(g,I){I.length&&this.writeMessage(g,D,I)},writePackedBoolean:function(g,I){I.length&&this.writeMessage(g,S,I)},writePackedFloat:function(g,I){I.length&&this.writeMessage(g,N,I)},writePackedDouble:function(g,I){I.length&&this.writeMessage(g,F,I)},writePackedFixed32:function(g,I){I.length&&this.writeMessage(g,Q,I)},writePackedSFixed32:function(g,I){I.length&&this.writeMessage(g,v,I)},writePackedFixed64:function(g,I){I.length&&this.writeMessage(g,T,I)},writePackedSFixed64:function(g,I){I.length&&this.writeMessage(g,k,I)},writeBytesField:function(g,I){this.writeTag(g,h.Bytes),this.writeBytes(I)},writeFixed32Field:function(g,I){this.writeTag(g,h.Fixed32),this.writeFixed32(I)},writeSFixed32Field:function(g,I){this.writeTag(g,h.Fixed32),this.writeSFixed32(I)},writeFixed64Field:function(g,I){this.writeTag(g,h.Fixed64),this.writeFixed64(I)},writeSFixed64Field:function(g,I){this.writeTag(g,h.Fixed64),this.writeSFixed64(I)},writeVarintField:function(g,I){this.writeTag(g,h.Varint),this.writeVarint(I)},writeSVarintField:function(g,I){this.writeTag(g,h.Varint),this.writeSVarint(I)},writeStringField:function(g,I){this.writeTag(g,h.Bytes),this.writeString(I)},writeFloatField:function(g,I){this.writeTag(g,h.Fixed32),this.writeFloat(I)},writeDoubleField:function(g,I){this.writeTag(g,h.Fixed64),this.writeDouble(I)},writeBooleanField:function(g,I){this.writeVarintField(g,Boolean(I))}},function(g){g[g.esriGeometryTypePoint=0]="esriGeometryTypePoint",g[g.esriGeometryTypeMultipoint=1]="esriGeometryTypeMultipoint",g[g.esriGeometryTypePolyline=2]="esriGeometryTypePolyline",g[g.esriGeometryTypePolygon=3]="esriGeometryTypePolygon",g[g.esriGeometryTypeMultipatch=4]="esriGeometryTypeMultipatch",g[g.esriGeometryTypeNone=127]="esriGeometryTypeNone"}(p||(p={}));const M={ConvertPbf:class{constructor(g){this.data=g}async convert(){var g;const I=new y(this.data),C=function(){let g={read:function(I,C){return I.readFields(g._readField,{version:"",queryResult:null},C)},_readField:function(I,C,A){1===I?C.version=A.readString():2===I&&(C.queryResult=g.QueryResult.read(A,A.readVarint()+A.pos))},write:function(I,C){I.version&&C.writeStringField(1,I.version),I.queryResult&&C.writeMessage(2,g.QueryResult.write,I.queryResult)},GeometryType:{esriGeometryTypePoint:{value:0,options:{}},esriGeometryTypeMultipoint:{value:1,options:{}},esriGeometryTypePolyline:{value:2,options:{}},esriGeometryTypePolygon:{value:3,options:{}},esriGeometryTypeMultipatch:{value:4,options:{}},esriGeometryTypeNone:{value:127,options:{}}},FieldType:{esriFieldTypeSmallInteger:{value:0,options:{}},esriFieldTypeInteger:{value:1,options:{}},esriFieldTypeSingle:{value:2,options:{}},esriFieldTypeDouble:{value:3,options:{}},esriFieldTypeString:{value:4,options:{}},esriFieldTypeDate:{value:5,options:{}},esriFieldTypeOID:{value:6,options:{}},esriFieldTypeGeometry:{value:7,options:{}},esriFieldTypeBlob:{value:8,options:{}},esriFieldTypeRaster:{value:9,options:{}},esriFieldTypeGUID:{value:10,options:{}},esriFieldTypeGlobalID:{value:11,options:{}},esriFieldTypeXML:{value:12,options:{}}},SQLType:{sqlTypeBigInt:{value:0,options:{}},sqlTypeBinary:{value:1,options:{}},sqlTypeBit:{value:2,options:{}},sqlTypeChar:{value:3,options:{}},sqlTypeDate:{value:4,options:{}},sqlTypeDecimal:{value:5,options:{}},sqlTypeDouble:{value:6,options:{}},sqlTypeFloat:{value:7,options:{}},sqlTypeGeometry:{value:8,options:{}},sqlTypeGUID:{value:9,options:{}},sqlTypeInteger:{value:10,options:{}},sqlTypeLongNVarchar:{value:11,options:{}},sqlTypeLongVarbinary:{value:12,options:{}},sqlTypeLongVarchar:{value:13,options:{}},sqlTypeNChar:{value:14,options:{}},sqlTypeNVarchar:{value:15,options:{}},sqlTypeOther:{value:16,options:{}},sqlTypeReal:{value:17,options:{}},sqlTypeSmallInt:{value:18,options:{}},sqlTypeSqlXml:{value:19,options:{}},sqlTypeTime:{value:20,options:{}},sqlTypeTimestamp:{value:21,options:{}},sqlTypeTimestamp2:{value:22,options:{}},sqlTypeTinyInt:{value:23,options:{}},sqlTypeVarbinary:{value:24,options:{}},sqlTypeVarchar:{value:25,options:{}}},QuantizeOriginPostion:{upperLeft:{value:0,options:{}},lowerLeft:{value:1,options:{}}},SpatialReference:{}};return g.SpatialReference.read=function(I,C){return I.readFields(g.SpatialReference._readField,{wkid:0,lastestWkid:0,vcsWkid:0,latestVcsWkid:0,wkt:""},C)},g.SpatialReference._readField=function(g,I,C){1===g?I.wkid=C.readVarint():2===g?I.lastestWkid=C.readVarint():3===g?I.vcsWkid=C.readVarint():4===g?I.latestVcsWkid=C.readVarint():5===g&&(I.wkt=C.readString())},g.SpatialReference.write=function(g,I){g.wkid&&I.writeVarintField(1,g.wkid),g.lastestWkid&&I.writeVarintField(2,g.lastestWkid),g.vcsWkid&&I.writeVarintField(3,g.vcsWkid),g.latestVcsWkid&&I.writeVarintField(4,g.latestVcsWkid),g.wkt&&I.writeStringField(5,g.wkt)},g.Field={},g.Field.read=function(I,C){return I.readFields(g.Field._readField,{name:"",fieldType:0,alias:"",sqlType:0,domain:"",defaultValue:""},C)},g.Field._readField=function(g,I,C){1===g?I.name=C.readString():2===g?I.fieldType=C.readVarint():3===g?I.alias=C.readString():4===g?I.sqlType=C.readVarint():5===g?I.domain=C.readString():6===g&&(I.defaultValue=C.readString())},g.Field.write=function(g,I){g.name&&I.writeStringField(1,g.name),g.fieldType&&I.writeVarintField(2,g.fieldType),g.alias&&I.writeStringField(3,g.alias),g.sqlType&&I.writeVarintField(4,g.sqlType),g.domain&&I.writeStringField(5,g.domain),g.defaultValue&&I.writeStringField(6,g.defaultValue)},g.Value={},g.Value.read=function(I,C){return I.readFields(g.Value._readField,{string_value:"",value_type:null,float_value:0,double_value:0,sint_value:0,uint_value:0,int64_value:0,uint64_value:0,sint64_value:0,bool_value:!1},C)},g.Value._readField=function(g,I,C){1===g?(I.string_value=C.readString(),I.value_type="string_value"):2===g?(I.float_value=C.readFloat(),I.value_type="float_value"):3===g?(I.double_value=C.readDouble(),I.value_type="double_value"):4===g?(I.sint_value=C.readSVarint(),I.value_type="sint_value"):5===g?(I.uint_value=C.readVarint(),I.value_type="uint_value"):6===g?(I.int64_value=C.readVarint(!0),I.value_type="int64_value"):7===g?(I.uint64_value=C.readVarint(),I.value_type="uint64_value"):8===g?(I.sint64_value=C.readSVarint(),I.value_type="sint64_value"):9===g&&(I.bool_value=C.readBoolean(),I.value_type="bool_value")},g.Value.write=function(g,I){g.string_value&&I.writeStringField(1,g.string_value),g.float_value&&I.writeFloatField(2,g.float_value),g.double_value&&I.writeDoubleField(3,g.double_value),g.sint_value&&I.writeSVarintField(4,g.sint_value),g.uint_value&&I.writeVarintField(5,g.uint_value),g.int64_value&&I.writeVarintField(6,g.int64_value),g.uint64_value&&I.writeVarintField(7,g.uint64_value),g.sint64_value&&I.writeSVarintField(8,g.sint64_value),g.bool_value&&I.writeBooleanField(9,g.bool_value)},g.Geometry={},g.Geometry.read=function(I,C){return I.readFields(g.Geometry._readField,{lengths:[],coords:[]},C)},g.Geometry._readField=function(g,I,C){2===g?C.readPackedVarint(I.lengths):3===g&&C.readPackedSVarint(I.coords)},g.Geometry.write=function(g,I){g.lengths&&I.writePackedVarint(2,g.lengths),g.coords&&I.writePackedSVarint(3,g.coords)},g.esriShapeBuffer={},g.esriShapeBuffer.read=function(I,C){return I.readFields(g.esriShapeBuffer._readField,{bytes:null},C)},g.esriShapeBuffer._readField=function(g,I,C){1===g&&(I.bytes=C.readBytes())},g.esriShapeBuffer.write=function(g,I){g.bytes&&I.writeBytesField(1,g.bytes)},g.Feature={},g.Feature.read=function(I,C){return I.readFields(g.Feature._readField,{attributes:[],geometry:null,compressed_geometry:null,shapeBuffer:null,centroid:null},C)},g.Feature._readField=function(I,C,A){1===I?C.attributes.push(g.Value.read(A,A.readVarint()+A.pos)):2===I?(C.geometry=g.Geometry.read(A,A.readVarint()+A.pos),C.compressed_geometry="geometry"):3===I?(C.shapeBuffer=g.esriShapeBuffer.read(A,A.readVarint()+A.pos),C.compressed_geometry="shapeBuffer"):4===I&&(C.centroid=g.Geometry.read(A,A.readVarint()+A.pos))},g.Feature.write=function(I,C){if(I.attributes)for(var A=0;A<I.attributes.length;A++)C.writeMessage(1,g.Value.write,I.attributes[A]);I.geometry&&C.writeMessage(2,g.Geometry.write,I.geometry),I.shapeBuffer&&C.writeMessage(3,g.esriShapeBuffer.write,I.shapeBuffer),I.centroid&&C.writeMessage(4,g.Geometry.write,I.centroid)},g.UniqueIdField={},g.UniqueIdField.read=function(I,C){return I.readFields(g.UniqueIdField._readField,{name:"",isSystemMaintained:!1},C)},g.UniqueIdField._readField=function(g,I,C){1===g?I.name=C.readString():2===g&&(I.isSystemMaintained=C.readBoolean())},g.UniqueIdField.write=function(g,I){g.name&&I.writeStringField(1,g.name),g.isSystemMaintained&&I.writeBooleanField(2,g.isSystemMaintained)},g.GeometryProperties={},g.GeometryProperties.read=function(I,C){return I.readFields(g.GeometryProperties._readField,{shapeAreaFieldName:"",shapeLengthFieldName:"",units:""},C)},g.GeometryProperties._readField=function(g,I,C){1===g?I.shapeAreaFieldName=C.readString():2===g?I.shapeLengthFieldName=C.readString():3===g&&(I.units=C.readString())},g.GeometryProperties.write=function(g,I){g.shapeAreaFieldName&&I.writeStringField(1,g.shapeAreaFieldName),g.shapeLengthFieldName&&I.writeStringField(2,g.shapeLengthFieldName),g.units&&I.writeStringField(3,g.units)},g.ServerGens={},g.ServerGens.read=function(I,C){return I.readFields(g.ServerGens._readField,{minServerGen:0,serverGen:0},C)},g.ServerGens._readField=function(g,I,C){1===g?I.minServerGen=C.readVarint():2===g&&(I.serverGen=C.readVarint())},g.ServerGens.write=function(g,I){g.minServerGen&&I.writeVarintField(1,g.minServerGen),g.serverGen&&I.writeVarintField(2,g.serverGen)},g.Scale={},g.Scale.read=function(I,C){return I.readFields(g.Scale._readField,{xScale:0,yScale:0,mScale:0,zScale:0},C)},g.Scale._readField=function(g,I,C){1===g?I.xScale=C.readDouble():2===g?I.yScale=C.readDouble():3===g?I.mScale=C.readDouble():4===g&&(I.zScale=C.readDouble())},g.Scale.write=function(g,I){g.xScale&&I.writeDoubleField(1,g.xScale),g.yScale&&I.writeDoubleField(2,g.yScale),g.mScale&&I.writeDoubleField(3,g.mScale),g.zScale&&I.writeDoubleField(4,g.zScale)},g.Translate={},g.Translate.read=function(I,C){return I.readFields(g.Translate._readField,{xTranslate:0,yTranslate:0,mTranslate:0,zTranslate:0},C)},g.Translate._readField=function(g,I,C){1===g?I.xTranslate=C.readDouble():2===g?I.yTranslate=C.readDouble():3===g?I.mTranslate=C.readDouble():4===g&&(I.zTranslate=C.readDouble())},g.Translate.write=function(g,I){g.xTranslate&&I.writeDoubleField(1,g.xTranslate),g.yTranslate&&I.writeDoubleField(2,g.yTranslate),g.mTranslate&&I.writeDoubleField(3,g.mTranslate),g.zTranslate&&I.writeDoubleField(4,g.zTranslate)},g.Transform={},g.Transform.read=function(I,C){return I.readFields(g.Transform._readField,{quantizeOriginPostion:0,scale:null,translate:null},C)},g.Transform._readField=function(I,C,A){1===I?C.quantizeOriginPostion=A.readVarint():2===I?C.scale=g.Scale.read(A,A.readVarint()+A.pos):3===I&&(C.translate=g.Translate.read(A,A.readVarint()+A.pos))},g.Transform.write=function(I,C){I.quantizeOriginPostion&&C.writeVarintField(1,I.quantizeOriginPostion),I.scale&&C.writeMessage(2,g.Scale.write,I.scale),I.translate&&C.writeMessage(3,g.Translate.write,I.translate)},g.FeatureResult={},g.FeatureResult.read=function(I,C){return I.readFields(g.FeatureResult._readField,{objectIdFieldName:"",uniqueIdField:null,globalIdFieldName:"",geohashFieldName:"",geometryProperties:null,serverGens:null,geometryType:0,spatialReference:null,exceededTransferLimit:!1,hasZ:!1,hasM:!1,transform:null,fields:[],values:[],features:[]},C)},g.FeatureResult._readField=function(I,C,A){1===I?C.objectIdFieldName=A.readString():2===I?C.uniqueIdField=g.UniqueIdField.read(A,A.readVarint()+A.pos):3===I?C.globalIdFieldName=A.readString():4===I?C.geohashFieldName=A.readString():5===I?C.geometryProperties=g.GeometryProperties.read(A,A.readVarint()+A.pos):6===I?C.serverGens=g.ServerGens.read(A,A.readVarint()+A.pos):7===I?C.geometryType=A.readVarint():8===I?C.spatialReference=g.SpatialReference.read(A,A.readVarint()+A.pos):9===I?C.exceededTransferLimit=A.readBoolean():10===I?C.hasZ=A.readBoolean():11===I?C.hasM=A.readBoolean():12===I?C.transform=g.Transform.read(A,A.readVarint()+A.pos):13===I?C.fields.push(g.Field.read(A,A.readVarint()+A.pos)):14===I?C.values.push(g.Value.read(A,A.readVarint()+A.pos)):15===I&&C.features.push(g.Feature.read(A,A.readVarint()+A.pos))},g.FeatureResult.write=function(I,C){if(I.objectIdFieldName&&C.writeStringField(1,I.objectIdFieldName),I.uniqueIdField&&C.writeMessage(2,g.UniqueIdField.write,I.uniqueIdField),I.globalIdFieldName&&C.writeStringField(3,I.globalIdFieldName),I.geohashFieldName&&C.writeStringField(4,I.geohashFieldName),I.geometryProperties&&C.writeMessage(5,g.GeometryProperties.write,I.geometryProperties),I.serverGens&&C.writeMessage(6,g.ServerGens.write,I.serverGens),I.geometryType&&C.writeVarintField(7,I.geometryType),I.spatialReference&&C.writeMessage(8,g.SpatialReference.write,I.spatialReference),I.exceededTransferLimit&&C.writeBooleanField(9,I.exceededTransferLimit),I.hasZ&&C.writeBooleanField(10,I.hasZ),I.hasM&&C.writeBooleanField(11,I.hasM),I.transform&&C.writeMessage(12,g.Transform.write,I.transform),I.fields)for(var A=0;A<I.fields.length;A++)C.writeMessage(13,g.Field.write,I.fields[A]);if(I.values)for(A=0;A<I.values.length;A++)C.writeMessage(14,g.Value.write,I.values[A]);if(I.features)for(A=0;A<I.features.length;A++)C.writeMessage(15,g.Feature.write,I.features[A])},g.CountResult={},g.CountResult.read=function(I,C){return I.readFields(g.CountResult._readField,{count:0},C)},g.CountResult._readField=function(g,I,C){1===g&&(I.count=C.readVarint())},g.CountResult.write=function(g,I){g.count&&I.writeVarintField(1,g.count)},g.ObjectIdsResult={},g.ObjectIdsResult.read=function(I,C){return I.readFields(g.ObjectIdsResult._readField,{objectIdFieldName:"",serverGens:null,objectIds:[]},C)},g.ObjectIdsResult._readField=function(I,C,A){1===I?C.objectIdFieldName=A.readString():2===I?C.serverGens=g.ServerGens.read(A,A.readVarint()+A.pos):3===I&&A.readPackedVarint(C.objectIds)},g.ObjectIdsResult.write=function(I,C){I.objectIdFieldName&&C.writeStringField(1,I.objectIdFieldName),I.serverGens&&C.writeMessage(2,g.ServerGens.write,I.serverGens),I.objectIds&&C.writePackedVarint(3,I.objectIds)},g.QueryResult={},g.QueryResult.read=function(I,C){return I.readFields(g.QueryResult._readField,{featureResult:null,Results:null,countResult:null,idsResult:null},C)},g.QueryResult._readField=function(I,C,A){1===I?(C.featureResult=g.FeatureResult.read(A,A.readVarint()+A.pos),C.Results="featureResult"):2===I?(C.countResult=g.CountResult.read(A,A.readVarint()+A.pos),C.Results="countResult"):3===I&&(C.idsResult=g.ObjectIdsResult.read(A,A.readVarint()+A.pos),C.Results="idsResult")},g.QueryResult.write=function(I,C){I.featureResult&&C.writeMessage(1,g.FeatureResult.write,I.featureResult),I.countResult&&C.writeMessage(2,g.CountResult.write,I.countResult),I.idsResult&&C.writeMessage(3,g.ObjectIdsResult.write,I.idsResult)},g}().read(I);if(null===C.queryResult)return this._buildResponse({exceededTransferLimit:!0},[]);const A=C.queryResult.featureResult,i=A.fields.map((g=>g.name)),e=A.transform.translate,l=A.transform.scale,Z=A.geometryType,d=A.transform.quantizeOriginPostion,o=null===(g=A.spatialReference)||void 0===g?void 0:g.wkid.toString(),s=A.features.map((g=>{let I=g.attributes.map(((g,I)=>({key:i[I],value:g[g.value_type]}))).reduce(((g,I)=>{const C={};return C[I.key]=I.value,{...g,...C}}),{}),C=[[[]]];if(null!==g.geometry){let I=Z===p.esriGeometryTypePoint?[1]:g.geometry.lengths,A=[],i=[];g.geometry.coords.forEach(((g,I)=>{I%2==0?A.push(g):i.push(g)})),C=V(W(A,I,l.xScale,e.xTranslate,!1),W(i,I,l.yScale,e.yTranslate,0===d),o)}let A={};return"esriGeometryTypePoint"===p[Z]?A={x:C[0][0][0],y:C[0][0][1]}:"esriGeometryTypeMultiPoint"===p[Z]?A={points:C[0]}:"esriGeometryTypePolyline"===p[Z]?A={paths:C}:"esriGeometryTypePolygon"===p[Z]&&(A={rings:C}),{geometry:A,attributes:I}}));return this._buildResponse(A,s)}_buildResponse(g,I){return{features:I,exceededTransferLimit:g.exceededTransferLimit,spatialReference:{wkid:4326,latestWkid:4326},geometryType:p[g.geometryType||127].replace("Type",""),hasM:g.hasM,hasZ:g.hasZ,globalIdFieldName:g.globalIdFieldName}}},GeometriesAtZoom:class{constructor(){this._geometriesAtZoom=new Array(24),this._maxGeometryZoom=0}async getKeysAtZoom(g,I){I=void 0!==I?I:this._maxGeometryZoom;const C=[];for(let A=Math.min(I,this._maxGeometryZoom);A>=g;A--)void 0!==this._geometriesAtZoom[A]&&C.push([...this._geometriesAtZoom[A].keys()]);return C.flat()}updateKeyAtZoom(g,I){let C="added";void 0===this._geometriesAtZoom[g]&&(this._geometriesAtZoom[g]=new Map),this._maxGeometryZoom=Math.max(this._maxGeometryZoom,g);for(let A=0;A<g;A++)void 0!==this._geometriesAtZoom[A]&&(this._geometriesAtZoom[A].delete(I),C="updated");return this._geometriesAtZoom[g].set(I,!0),C}async updateKeysAtZoom(g,I){return I.map((I=>this.updateKeyAtZoom(g,I)))}},DeZigZagJSON:class{constructor(g,I,C){this.srid="3857",this.features=g,this.transform=I,this.geometryType=C}async convert(){return this.features.map((g=>(g.geometry=this.convertGeometry(g.geometry),g)))}convertGeometry(g){const I=[],C=[],A=[];"esriGeometryPoint"===this.geometryType?(I.push(1),C.push(g.x),A.push(g.y)):"esriGeometryMultipoint"===this.geometryType?g.points.forEach((g=>{I.push(1),C.push(g[0]),A.push(g[1])})):"esriGeometryPolyline"===this.geometryType?g.paths.forEach((g=>{I.push(g.length),g.forEach((g=>{C.push(g[0]),A.push(g[1])}))})):"esriGeometryPolygon"===this.geometryType&&g.rings.forEach((g=>{I.push(g.length),g.forEach((g=>{C.push(g[0]),A.push(g[1])}))}));const i=V(W(C,I,this.transform.scale[0],this.transform.translate[0],!1),W(A,I,this.transform.scale[1],this.transform.translate[1],"upperLeft"===this.transform.originPosition),this.srid);let e={};return"esriGeometryPoint"===this.geometryType?e={x:i[0][0][0],y:i[0][0][1]}:"esriGeometryMultipoint"===this.geometryType?e={points:i[0]}:"esriGeometryPolyline"===this.geometryType?e={paths:i}:"esriGeometryPolygon"===this.geometryType&&(e={rings:i}),e}}};let U;self.addEventListener("message",(g=>{const I=g.data||g,C=(g,I,C,A)=>{postMessage({type:A||(I?"error":"response"),id:g,message:C,error:I})},A={init:g=>{const{id:I,command:A,message:i}=g;U=new M[A](...i);const e=[...Object.getOwnPropertyNames(M[A].prototype),...Object.keys(U)].map((g=>[g,typeof M[A].prototype[g]])).reduce(((g,I)=>({...g,[I[0]]:I[1]})),{});C(I,void 0,e,"init_response")},get:function(g){const{id:I,command:A}=g;U&&U[A]?C(I,void 0,U[A]):C(I,void 0,void 0)},exec:function(g){const{id:I,command:A,message:i}=g;if(U&&U[A]&&"function"==typeof U[A]){const g=U[A].apply(U,i);g&&"function"==typeof g.then?g.then((g=>C(I,void 0,g))).catch((g=>C(I,g))):C(I,void 0,g)}else C(I,new Error(`command "${A}" not found`))}};A[I.type]&&A[I.type](I)}));const x=()=>Math.random().toString(36).substring(2);function z(g,I=[]){return function(){let g=!1;try{g="function"==typeof window.Worker}catch(I){g=!1}return g}()?new O(g,I):new j(g,I)}class O{constructor(g,I=[]){this.initId=x()+"-"+g,this.worker=new a,this.handlers=new Map,this.worker.onmessage=g=>{const I=g.data,C=this.handlers.get(I.id),A=this;if(C){if("response"===I.type&&C.res(I.message),"error"===I.type){const g=I.error||new Error(`Unknown error with ${this.subClass}`);C.rej(g)}"init_response"===I.type&&(this._=Object.keys(I.message).map((g=>{const C=typeof I.message[g];return[g,function(){return C?A.exec(g)(...arguments):A.get(g)}]})).reduce(((g,I)=>({...g,[I[0]]:I[1]})),{}),C.res(this._))}},this.worker.postMessage({type:"init",id:this.initId,command:g,message:I})}onLoad(){return new Promise((g=>{void 0===this._?this.handlers.set(this.initId,{res:g,rej:g}):g(this._)}))}exec(g){const I=this;return function(...C){return new Promise(((A,i)=>{const e=x()+"-"+g;I.handlers.set(e,{res:A,rej:i}),I.worker.postMessage({type:"exec",id:e,command:g,message:[...C]})}))}}get(g){return new Promise(((I,C)=>{const A=x()+"-"+g;this.handlers.set(A,{res:I,rej:C}),this.worker.postMessage({type:"get",id:A,command:g,message:[]})}))}}class j{constructor(g,I=[]){this.subClass=new M[g](...I)}onLoad(){return new Promise((g=>g(this)))}get(g){return new Promise((I=>I(this.subClass[g])))}exec(g){const I=this;return function(...C){return Promise.resolve(I.subClass[g](...C))}}}class E{constructor(g){this._map=g}async fetch(g,I={},C){let A=g.toString();const i=I.body?A.replace(/\??$/,"?")+I.body:A;i.length>2048&&void 0===I.method&&(I.method="POST"),I.method=["POST","GET","PUT"].indexOf((I.method||"").toUpperCase())>-1?(I.method||"").toUpperCase():"GET","GET"===I.method&&(A=i);const e={url:A,method:I.method};return"POST"===I.method&&(I.headers&&(e.headers=I.headers),I.body&&(e.body=I.body.toString())),{arrayBuffer:async()=>(e.type="arrayBuffer",this._getResource(e,C)),json:async()=>(e.type="json",this._getResource(e,C)),text:async()=>(e.type="string",this._getResource(e,C))}}async _getResource(g,I){return new Promise(((C,A)=>{let i=this._map.style.getResource(Math.random().toString(32).substring(2),g,((g,I)=>{g?A(g.toString()):C(I)}));I&&I({cancel:()=>{i.cancel(),A("cancel")}})}))}}const _={where:"1=1",outfields:"*",resultRecordCount:void 0};return function(g){return class extends g.GeoJSONSource{constructor(I,C,A,i){super(I,{type:"geojson",collectResourceTiming:!1},A,i),this._quantizedQuery=!1,this._requestFormat="json",this._geometriesAtZoom=z("GeometriesAtZoom"),this._requests=[],this._sortableFields=[],this._events=new g.Evented,this._liveLayer=!1,this._waitTimes={},this.id=I,this._originalSource={..._,...C};const e=this._originalSource.url.match(/.+?[Feature|Map]Server\/\d{1,}/);if(!e)throw new Error("ArcGisRest URL is invalid "+this._originalSource.url);this._originalSource.url=e[0],window.source=this}onAdd(g){this.map=g,this._asyncLoad(g).then((()=>super.load()))}async _asyncLoad(g){const I=new URL(this._originalSource.url);I.searchParams.append("f","json"),this._originalSource.token&&I.searchParams.append("token",this._originalSource.token);const C=new E(g),A=await(await C.fetch(I)).json();if(A.error)return console.error("ArcGIS Error",A.error),!1;const i=A.maxRecordCount||500,e=(A.supportedQueryFormats||"").toLowerCase().replace(/\s/g,"").split(",").indexOf("pbf")>-1;this._requestFormat=e?"pbf":"json",this._quantizedQuery=!0===A.supportsCoordinatesQuantization&&("esriGeometryPolygon"===A.geometryType||"esriGeometryPolyline"===A.geometryType),A.fields&&(this._sortableFields=A.fields.filter((g=>["esriFieldTypeString","esriFieldTypeDouble","esriFieldTypeDate","esriFieldTypeGUID","esriFieldTypeGlobalID","esriFieldTypeInteger","esriFieldTypeOID","esriFieldTypeSingle","esriFieldTypeSmallInteger"].indexOf(g.type)>-1&&-1===g.name.indexOf("()")&&-1===(g.alias||"").indexOf("()"))).map((g=>g.name))),A.indexes&&(this.promoteId=A.indexes.filter((g=>!0===g.isUnique&&g.fields&&this._sortableFields.indexOf(g.fields)>-1)).map((g=>g.fields))[0]),A.fields&&(this._primaryKeyType=A.fields.filter((g=>g.name===this.promoteId)).map((g=>["esriFieldTypeDouble","esriFieldTypeDate","esriFieldTypeGUID","esriFieldTypeGlobalID","esriFieldTypeInteger","esriFieldTypeOID","esriFieldTypeSingle","esriFieldTypeSmallInteger"].indexOf(g.type)>-1?"number":"string"))[0]),this._originalSource.resultRecordCount=(this._originalSource.resultRecordCount||1/0)<i?this._originalSource.resultRecordCount:i,this.setData({type:"FeatureCollection",features:[]}),this._events.on("data",(g=>this.drawMapData(g.json,g.zoom))),this.loadMapData(g),g.on("moveend",(()=>this._liveLayer&&this._waitEvent("redrawMap",100))),this._events.on("redrawMap",(()=>this.loadMapData(g)))}loadTile(g,I){this._liveLayer||(this._liveLayer=!0,this._waitEvent("redrawMap",1e3)),super.loadTile(g,I)}async loadMapData(g,I){if(void 0===(g=void 0===g?this.map:g))throw new Error("Source Data (Source ID: "+this.id+") could not be loaded");console.log("LOADING");const C=this._quantizedQuery?Math.floor(this.map.getZoom()):this.map.getMaxZoom();let A=this._originalSource.where;const i={where:A};if(this.promoteId){const e=n((I=I||[g.getBounds().getWest(),g.getBounds().getSouth(),g.getBounds().getEast(),g.getBounds().getNorth()])[0],I[1]),l=n(I[2],I[3]),Z=[e.x,e.y,l.x,l.y],d=await this._geometriesAtZoom.exec("getKeysAtZoom")(C);i.geometry=Z.join(","),i.geometryType="esriGeometryEnvelope",i.inSR="3857";const o=g=>"string"===this._primaryKeyType?`'${g}'`:g;d.length&&(i.where=`(${A}) AND "${this.promoteId}" NOT IN (${d.map((g=>o(g))).join(",")})`)}this._requests.forEach((g=>g.cancel())),this._queryFeatures(this._originalSource.url,i,0,(g=>this._requests.push(g)),g,C),this._liveLayer=!1}async drawMapData(g,I){const C=this._esriJsonToFeatures(g),A=C.map((g=>g.properties[this.promoteId])),i=await this._geometriesAtZoom.exec("updateKeysAtZoom")(I,A),e={add:i.map(((g,I)=>{if("added"===g)return C[I]})).filter((g=>void 0!==g)),update:i.map(((g,I)=>{if("updated"===g)return C[I].geometry,{id:A[I],newGeometry:C[I].geometry}})).filter((g=>void 0!==g))};if(e.update.length||e.add.length){this.updateData;{const g=this._data.features,I=g.map((g=>g.properties[this.promoteId]));for(let C=0;C<e.update.length;C++){let A=I.indexOf(e.update[C].id);A>-1&&(g[A].geometry=e.update[C].newGeometry)}for(let I=0;I<e.add.length;I++)g.push(e.add[I]);this.setData(this._data)}}}async _queryFeatures(g,I,C,A,i,e){if(void 0===(i=void 0===i?this.map:i))throw new Error("Source Data (Source ID: "+this.id+") could not be loaded");const l=Array.isArray(this._originalSource.outfields)?this._originalSource.outfields.map((g=>`"${g}"`)).join(","):"*",Z=this._quantizedQuery?JSON.stringify(function(g,I=256){return{mode:"view",originPosition:"upperLeft",tolerance:G(g,I),extent:r([-180,-85.06,180,85.06])}}(e,this.tileSize)):"",d={where:this._options.where,spatialRel:"esriSpatialRelIntersects",outFields:l,returnGeometry:!0,returnTrueCurves:!1,outSR:this._quantizedQuery||"pbf"===this._requestFormat?"3857":"4326",returnIdsOnly:!1,returnCountOnly:!1,returnZ:!1,returnM:!1,returnDistinctValues:!1,returnExtentOnly:!1,featureEncoding:"esriDefault",orderByFields:this._sortableFields.map((g=>`"${g}"`)).join(","),resultOffset:void 0!==C?C:0,resultRecordCount:this._originalSource.resultRecordCount,quantizationParameters:Z,f:this._requestFormat,...I},o=new E(i),s=new URL(g);Object.keys(d).map((g=>s.searchParams.append(g,d[g].toString())));const m=o.fetch(g+"/query",{body:s.search.replace(/^\?/,""),headers:{"content-type":"application/x-www-form-urlencoded"}},(g=>A&&A(g))),t=await await m;let a={features:[],exceededTransferLimit:!1};try{if("pbf"===d.f){const g=z("ConvertPbf",[await t.arrayBuffer()]);a=await g.exec("convert")()}else if(a=await t.json(),this._quantizedQuery){const g=z("DeZigZagJSON",[a.features,a.transform,a.geometryType]),I=await g.exec("convert")();a.spatialReference={wkid:4326},a.features=I}}catch(g){return void("cancel"!==g&&console.error("Error with request",g))}a&&a.features.length&&this._events.fire("data",{json:a,zoom:e}),!0===a.exceededTransferLimit&&this._queryFeatures(g,I,(C||0)+a.features.length,A,i,e)}_esriJsonToFeatures(g){if(-1===Object.keys({esriGeometryPoint:"Point",esriGeometryMultipoint:"MultiPoint",esriGeometryLine:"LineString",esriGeometryPolyline:"MultiLineString",esriGeometryPolygon:"MultiPolygon"}).indexOf(g.geometryType))throw new Error("Geometry "+g.geometryType+" not supported");return g.features.map((I=>(4326!==(g.spatialReference.latestWkid||g.spatialReference.wkid)&&console.warn("Unspported Projection ("+(g.spatialReference.latestWkid||g.spatialReference.wkid)+"), some data may not display correctly"),{type:"Feature",properties:I.attributes,geometry:i(I.geometry)})))}_waitEvent(g,I=100){console.log("Called",g,I),this._waitTimes[g]=(this._waitTimes[g]||0)+I,setTimeout((()=>{void 0!==this._waitTimes[g]&&(this._waitTimes[g]=this._waitTimes[g]-I,this._waitTimes[g]<=0&&(this._waitTimes[g]=0,this._events.fire(g)))}),I)}}}}));
//# sourceMappingURL=maplibre-gl-arcgis-rest-source.min.js.map
